{
  hostname_prefix = 'ffkbuu-',
  site_name = 'Freifunk KBU Umland',
  site_code = 'ffkbuu',

  -- 32 bytes of random data, encoded in hexacimal
  -- Must be the same of all nodes in one mesh domain
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = '72d4f8d5b864130a52db5e6810ad3996e9e5e2d01491804aa07f250273487877',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.158.128.0/18',
  prefix6 = 'fdd3:5d16:b5dd:fc33::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
    '0.de.pool.ntp.org',
    '1.de.pool.ntp.org',
    '2.de.pool.ntp.org',
    '3.de.pool.ntp.org',
    '0.openwrt.pool.ntp.org',
    '1.openwrt.pool.ntp.org',
    '2.openwrt.pool.ntp.org',
    '3.openwrt.pool.ntp.org',
  },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,
    ap = {
      -- ESSID used for client network.
      ssid = 'kbu.freifunk.net',
      -- disabled = true, (optional)
    },
    ibss = {
      ssid = '02:d3:33:33:fc:33',  -- ESSID used for mesh
      bssid = '02:d3:33:33:fc:33', -- BSSID used for mesh
      -- Bitrate used for multicast/broadcast packets.
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'kbu.freifunk.net',
    },
    ibss = {
      ssid = '02:d3:33:33:fc:34',  -- ESSID used for mesh
      bssid = '02:d3:33:33:fc:34', -- BSSID used for mesh
      -- Bitrate used for multicast/broadcast packets.
      mcast_rate = 12000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.158.128.3',
    ip6 = 'fdd3:5d16:b5dd:fc33::fc33',
    -- anycast MAC of all nodes
    mac = '16:42:06:23:05:15',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },
  mesh_vpn = {
    mtu = 1312,
    enabled = true,
    fastd = {
      -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
      -- what these options do.
      -- List of crypto-methods to use.
      methods = {'salsa2012+umac'},
      configurable = true,
      -- syslog_level = 'warn',

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,
          peers = {
            peer1 = {
              key = '0cadd6b4f942322a55b0028d209967ef0ac4916455c2a02ef0b5c7ba05bae08b',
              remotes = {
                'ipv4 "uvpn1.kbu.freifunk.net" port 10011',
                'ipv4 "uvpn1.ffkbu.de" port 10011'
              },
            },
            peer2 = {
              key = '27b953c1e564f0b69708ea51f4c038f8645d9bd6e5d3577e82434a4f1cf07ae9',
              remotes = {
                'ipv4 "uvpn2.kbu.freifunk.net" port 10011',
                'ipv4 "uvpn2.ffkbu.de" port 10011'
              },
            },
            peer3 = {
              key = '2dd4fbe7f4982311e785415f5fa3944d0ce2a9819477e4040f1ab06026332176',
              remotes = {
                'ipv4 "uvpn3.kbu.freifunk.net" port 10011',
                'ipv4 "uvpn3.ffkbu.de" port 10011'
              },
            },
            peer4 = {
              key = '68ffc5ba0bffbb8b834e3d21aeecf51f18f34e4790d4296cb618ef39260769c4',
              remotes = {
                'ipv4 "uvpn4.kbu.freifunk.net" port 10011',
                'ipv4 "uvpn4.ffkbu.de" port 10011'
              },
            },
            peer5 = {
              key = '261b5d4e822116caa3c2ae3f074fec5b443ec814273c6f4410d7b69c074703fe',
              remotes = {
                'ipv4 "uvpn5.kbu.freifunk.net" port 10012',
                'ipv4 "uvpn5.ffkbu.de" port 10012'
              },
            },
            peer6 = {
              key = '79c084f60151ec5b82c8c15b753a26644d5bfd226afef90a53d9fb1524783b77',
              remotes = {
                'ipv4 "uvpn6.kbu.freifunk.net" port 10012',
                'ipv4 "uvpn6.ffkbu.de" port 10012'
              },
            },
            peer7 = {
              key = 'ccf19613d656972ea551ad0d3165602707194d5f8d5edaab241b594d2ed70cda',
              remotes = {
                'ipv4 "uvpn7.kbu.freifunk.net" port 10012',
                'ipv4 "uvpn7.ffkbu.de" port 10012'
              },
            },
            peer8 = {
              key = '57ce1f3602db41af3b280b9f284fe9fc4b2e544ae90dea4df38959a686589b67',
              remotes = {
                'ipv4 "uvpn8.kbu.freifunk.net" port 10012',
                'ipv4 "uvpn8.ffkbu.de" port 10012'
              },
            },
          },
        },
      },
    },
    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,
      -- Default upload limit (kbit/s).
      egress = 200,
      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'noupdate',
    enabled = false,

    -- List of branches. You may define multiple branches.
    branches = {
      noupdate = {
        name = 'noupdate',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 9999,

        -- List of public keys of maintainers.
        pubkeys = {
          '0000000000000000000000000000000000000000000000000000000000000000', -- Alice
          '1111111111111111111111111111111111111111111111111111111111111111', -- Bob
          '2222222222222222222222222222222222222222222222222222222222222222', -- Mary
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  setup_mode = {
    skip = false,
  },
  config_mode = {
    remote_login = {
      show_password_form = true, -- default false
      min_password_length = 12
    },
    -- Show/hide the altitude field
    geo_location = {
      show_altitude = false,
    },
    -- define if the contact field is obligatory (optional)
    -- owner = {
      -- obligatory = true
    -- },
  },
}
